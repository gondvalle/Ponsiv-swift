// scripts/generateAssetsIndex.js
const fs = require('fs');
const path = require('path');

const ROOT = process.cwd();
const OUT = path.join(ROOT, 'src', 'data', 'assetsIndex.ts');
const BASE = path.join(ROOT, 'assets');

// Scan images under the new structure. We include:
// - productos/** (all product photos)
// - logos/** and banners/** (unchanged)
const FOLDERS = ['productos', 'logos', 'banners'];
const exts = new Set(['.png', '.jpg', '.jpeg', '.webp']);

function walk(dir) {
  const out = [];
  for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
    const p = path.join(dir, entry.name);
    if (entry.isDirectory()) out.push(...walk(p));
    else if (exts.has(path.extname(entry.name).toLowerCase())) out.push(p);
  }
  return out;
}

function rel(p) {
  return path.relative(BASE, p).replace(/\\/g, '/'); // windows safe
}

function main() {
  const files = FOLDERS.flatMap(f => {
    const dir = path.join(BASE, f);
    return fs.existsSync(dir) ? walk(dir) : [];
  });

  const lines = files.map(fp => {
    const r = rel(fp);
    // üîÅ Usar expo-asset para obtener la URI que funciona tambi√©n en web
    return `  ${JSON.stringify(r)}: Asset.fromModule(require("@/assets/${r}")).uri,`;
  });

  const code =
`// AUTO-GENERATED by scripts/generateAssetsIndex.js
// Do not edit manually.
import { Asset } from "expo-asset";
const index: Record<string, string> = {
${lines.join('\n')}
};
export default index;
`;

  fs.mkdirSync(path.dirname(OUT), { recursive: true });
  fs.writeFileSync(OUT, code, 'utf8');
  console.log(`Wrote ${OUT} with ${files.length} entries`);
}

main();
